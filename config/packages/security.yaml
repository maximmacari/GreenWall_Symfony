security:
    enable_authenticator_manager: true
    password_hashers:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            entry_point: App\Security\AuthenticationEntryPoint
            provider: app_user_provider
            custom_authenticator: App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                    #target: route_name
            #login_throttling:
             #   max_attempts: 5
              #  interval: '2'

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # allow unauthenticated users to access the login form
        - { path: '^/login', roles: PUBLIC_ACCESS }
        - { path: '^/home', roles: PUBLIC_ACCESS }
        - { path: '^/projects/', roles: PUBLIC_ACCESS }
        - { path: '^/projects/\d+$', roles: PUBLIC_ACCESS }
        - { path: '^/products/', roles: PUBLIC_ACCESS }
        - { path: '^/products/\d+$', roles: PUBLIC_ACCESS }
        - { path: '^/contact/new', roles: PUBLIC_ACCESS }
        - { path: '^/register', roles: PUBLIC_ACCESS }
        - { path: '^/cookies', roles: PUBLIC_ACCESS }
        
        
        # ROLE_USER that is not yet a registered client
        - { path: '^/client/new' , roles: ROLE_USER }
        - { path: '^/client/', roles: PUBLIC_ACCESS } # client's profile
        - { path: '^/direction/', roles: PUBLIC_ACCESS } # client's direction
        - { path: '^/order/', roles: PUBLIC_ACCESS } # client's orders
        
        # ROLE_CLIENTS: process orders
        - { path: '^/profile', roles: ROLE_USER }

        # ROLE_ADMIN: edit, delets, updates -> Projects, Products
        - { path: '^/projects', roles: ROLE_ADMIN }
        - { path: '^/client', roles: ROLE_ADMIN }
        - { path: '^/products', roles: ROLE_ADMIN }
        - { path: '^/contact', roles: ROLE_ADMIN }
        - { path: '^/direction', roles: ROLE_ADMIN }
        - { path: '^/order', roles: ROLE_ADMIN } # client's orders
        
        # ROLE_SUPERADMIN
